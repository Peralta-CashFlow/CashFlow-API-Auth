{
  "openapi": "3.0.1",
  "info": {
    "title": "CashFlow-API-Auth",
    "description": "This API is responsible for Users management on CashFlow app.",
    "contact": {
      "name": "Vinicius Peralta",
      "email": "vinicius.peralta@hotmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    },
    "version": "0.0.2"
  },
  "servers": [
    {
      "url": "http://localhost:8090",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Financial Profile",
      "description": "Financial profile related operations"
    },
    {
      "name": "User",
      "description": "User related operations"
    }
  ],
  "paths": {
    "/auth/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register a new user",
        "description": "Should register a new user from the provided request data.",
        "operationId": "register",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/user/personal-information": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Edit user personal information",
        "description": "Should edit user personal information from the provided request data.",
        "operationId": "editPersonalInformation",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPersonalInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User personal information edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to edit others personal information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/user/change-password": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Change password",
        "description": "Should change the password of the authenticated user.",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Invalid old password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to change password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/financial-profile": {
      "patch": {
        "tags": [
          "Financial Profile"
        ],
        "summary": "Edit user financial profile",
        "description": "Should edit user financial profile from the provided request data.",
        "operationId": "editFinancialProfile",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditFinancialInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User financial profile edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialInformationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to edit financial information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/user/personal-information/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user personal information",
        "description": "Should return the personal information of the authenticated user.",
        "operationId": "getPersonalInformation",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User personal information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to view personal information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/user/login": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login a user",
        "description": "Should login a user from the provided request data.",
        "operationId": "login",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "User e-mail",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "vinicius-peralta@hotmail.com"
          },
          {
            "name": "password",
            "in": "query",
            "description": "User password",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Password123!"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "User logged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error while generation JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/financial-profile/{userId}": {
      "get": {
        "tags": [
          "Financial Profile"
        ],
        "summary": "Get user financial profile",
        "description": "Should return the financial profile of the user",
        "operationId": "getFinancialProfile",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User financial profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialInformationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to get financial information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/auth/user/delete-account": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete account",
        "description": "Should delete the authenticated user's account.",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language to be used on response messages",
            "example": "en"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token",
            "required": true,
            "example": "JWT.TOKEN.HERE"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "401": {
            "description": "Unauthenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to delete account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreationRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "Vinicius"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Peralta"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User e-mail",
            "example": "vinicius-peralta@hotmail.com"
          },
          "password": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|\u003C\u003E]).{8,}$",
            "type": "string",
            "description": "User password",
            "example": "Password123!"
          }
        },
        "description": "User creation request"
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User first name",
            "example": "Vinicius"
          },
          "lastName": {
            "type": "string",
            "description": "User last name",
            "example": "Peralta"
          },
          "email": {
            "type": "string",
            "description": "User e-mail",
            "example": "vinicius-peralta@hotmail.com"
          },
          "profile": {
            "type": "string",
            "description": "User profile",
            "example": "Basic"
          },
          "avatar": {
            "type": "string",
            "description": "User avatar",
            "nullable": true,
            "example": "base64 text"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "nullable": true,
            "example": "Female"
          },
          "birthDay": {
            "type": "string",
            "description": "User birthday",
            "format": "date",
            "nullable": true,
            "example": "1999-02-23"
          },
          "taxRegistration": {
            "type": "string",
            "description": "User tax registration",
            "nullable": true,
            "example": "00011122233"
          }
        },
        "description": "User information response"
      },
      "ExceptionResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Exception title",
            "example": "Invalid request data"
          },
          "message": {
            "type": "string",
            "description": "Exception message",
            "example": "The provided request data is invalid."
          },
          "className": {
            "type": "string",
            "description": "Exception class name",
            "example": "UserController.java"
          },
          "methodName": {
            "type": "string",
            "description": "Exception method name",
            "example": "register"
          }
        },
        "description": "CashFlow's Exception base response."
      },
      "EditPersonalInformationRequest": {
        "required": [
          "firstName",
          "lastName",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID",
            "format": "int64",
            "example": 1
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "User first name",
            "example": "Vinicius"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "User last name",
            "example": "Peralta"
          },
          "gender": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "birthDay": {
            "type": "string",
            "format": "date"
          },
          "taxNumber": {
            "pattern": "^(\\d{11}|\\d{14})$",
            "type": "string"
          },
          "avatar": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string"
          }
        },
        "description": "Edit user personal information request"
      },
      "EditPasswordRequest": {
        "required": [
          "newPassword",
          "oldPassword",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID",
            "format": "int64",
            "example": 1
          },
          "oldPassword": {
            "type": "string",
            "description": "User old password",
            "example": "OldPassword123!"
          },
          "newPassword": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|\u003C\u003E]).{8,}$",
            "type": "string",
            "description": "User new password",
            "example": "NewPassword123!"
          }
        },
        "description": "Edit password request"
      },
      "EditFinancialInformationRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID",
            "format": "int64",
            "example": 1
          },
          "occupation": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User occupation",
            "example": "Software Engineer"
          },
          "income": {
            "minimum": 1,
            "type": "number",
            "description": "User income",
            "example": 50000
          },
          "expense": {
            "minimum": 1,
            "type": "number",
            "description": "User expense",
            "example": 25000
          },
          "goals": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User goals",
            "example": "Save money for a house"
          }
        },
        "description": "Edit user financial information request"
      },
      "FinancialInformationResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID",
            "format": "int64",
            "example": 1
          },
          "occupation": {
            "type": "string",
            "description": "User occupation",
            "example": "Software Engineer"
          },
          "income": {
            "type": "number",
            "description": "User income",
            "example": 50000
          },
          "expense": {
            "type": "number",
            "description": "User expense",
            "example": 25000
          },
          "goals": {
            "type": "string",
            "description": "User goals",
            "example": "Save money for a house"
          }
        },
        "description": "User financial information response"
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "authorities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CASH_FLOW_BASICS"
              ]
            }
          },
          "jwtToken": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "DeleteAccountRequest": {
        "required": [
          "password",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User ID",
            "format": "int64",
            "example": 1
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "Password123!"
          }
        },
        "description": "Delete account request"
      }
    }
  }
}